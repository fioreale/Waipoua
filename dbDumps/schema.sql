--
-- PostgreSQL database dump
--

-- Dumped from database version 12.2
-- Dumped by pg_dump version 12.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: Association; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Association" (
    headquarter character varying(30) NOT NULL,
    association_description text NOT NULL,
    ass_phone_number character varying(20) NOT NULL,
    association_email character varying(20) NOT NULL,
    association_name character varying(20) NOT NULL
);


ALTER TABLE public."Association" OWNER TO postgres;

--
-- Name: Association_Image; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Association_Image" (
    association_name character varying(20) NOT NULL,
    "URI_image" character varying(50) NOT NULL
)
WITH (autovacuum_enabled='true');


ALTER TABLE public."Association_Image" OWNER TO postgres;

--
-- Name: Event; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Event" (
    "ID_event" integer NOT NULL,
    event_presentation text,
    "ID_contact_person" integer NOT NULL,
    "event_ID_service" integer,
    "event_URI_image" character varying(50),
    event_name character varying(20) NOT NULL,
    event_category integer NOT NULL,
    location character varying(50) NOT NULL,
    day integer NOT NULL,
    month integer NOT NULL,
    year integer NOT NULL,
    hour integer NOT NULL,
    minute integer NOT NULL
);


ALTER TABLE public."Event" OWNER TO postgres;

--
-- Name: Event_Category; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Event_Category" (
    "ID_category" integer NOT NULL,
    event_category_name character varying(20) NOT NULL
);


ALTER TABLE public."Event_Category" OWNER TO postgres;

--
-- Name: Event_Category_ID_category_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Event_Category" ALTER COLUMN "ID_category" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Event_Category_ID_category_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 10000
    CACHE 1
);


--
-- Name: Image; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Image" (
    "URI" character varying(50) NOT NULL
);


ALTER TABLE public."Image" OWNER TO postgres;

--
-- Name: Person; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Person" (
    "ID_person" integer NOT NULL,
    name character varying(20) NOT NULL,
    surname character varying(20) NOT NULL,
    description text,
    phone_number character varying(20),
    email character varying(20),
    "URI_image" character varying(50) NOT NULL,
    "ID_role" integer NOT NULL
);


ALTER TABLE public."Person" OWNER TO postgres;

--
-- Name: Person_ID_person_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Person" ALTER COLUMN "ID_person" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Person_ID_person_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 10000
    CACHE 1
);


--
-- Name: Role; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Role" (
    "ID_role" integer NOT NULL,
    role_name character varying(20) NOT NULL
);


ALTER TABLE public."Role" OWNER TO postgres;

--
-- Name: Service; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Service" (
    "ID_service" integer NOT NULL,
    service_name character varying(50) NOT NULL,
    service_presentation text,
    service_category integer NOT NULL
);


ALTER TABLE public."Service" OWNER TO postgres;

--
-- Name: Service_Category; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Service_Category" (
    "ID_category" integer NOT NULL,
    category_name character varying(20) NOT NULL
);


ALTER TABLE public."Service_Category" OWNER TO postgres;

--
-- Name: Service_Images; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Service_Images" (
    "ID_service" integer NOT NULL,
    "URI_image" character varying(50) NOT NULL
);


ALTER TABLE public."Service_Images" OWNER TO postgres;

--
-- Name: donation; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.donation (
    "ID_Transaction" integer NOT NULL,
    association_name character varying(30) NOT NULL,
    donor_name character varying(30) NOT NULL,
    earning integer NOT NULL,
    date date NOT NULL
);


ALTER TABLE public.donation OWNER TO postgres;

--
-- Name: donation_ID_Transaction_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.donation ALTER COLUMN "ID_Transaction" ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public."donation_ID_Transaction_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 10000
    CACHE 1
);


--
-- Name: people_involved_in_services; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.people_involved_in_services (
    "ID_Service_inv" integer NOT NULL,
    "ID_Person_inv" integer NOT NULL
);


ALTER TABLE public.people_involved_in_services OWNER TO postgres;

--
-- Data for Name: Association; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Association" (headquarter, association_description, ass_phone_number, association_email, association_name) FROM stdin;
\.


--
-- Data for Name: Association_Image; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Association_Image" (association_name, "URI_image") FROM stdin;
\.


--
-- Data for Name: Event; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Event" ("ID_event", event_presentation, "ID_contact_person", "event_ID_service", "event_URI_image", event_name, event_category, location, day, month, year, hour, minute) FROM stdin;
1	Presentation of the Association in which there will be a lot of people that will have fun by plating with toys all together	4	\N	event_image_1	Waipoua, that's it!	5	Via Comasina,SNC, Milano,Italy	22	11	2020	17	0
\.


--
-- Data for Name: Event_Category; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Event_Category" ("ID_category", event_category_name) FROM stdin;
1	Animal Protection
2	Forest Protection
5	Association Promotio
\.


--
-- Data for Name: Image; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Image" ("URI") FROM stdin;
forest_1
forest_2
forest_3
person_1
image_service_1
image_service_2
event_image_1
\.


--
-- Data for Name: Person; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Person" ("ID_person", name, surname, description, phone_number, email, "URI_image", "ID_role") FROM stdin;
4	Vittorio	Banfi	Biologist passionate for the nature	3339767321	vittorio@wiapoua.org	person_1	5
\.


--
-- Data for Name: Role; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Role" ("ID_role", role_name) FROM stdin;
1	Chief
2	Vice
3	Treasurer
4	Vet
5	Biologist
6	Chemist
7	Recycle Expert
8	Volunteer
\.


--
-- Data for Name: Service; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Service" ("ID_service", service_name, service_presentation, service_category) FROM stdin;
1	Fight against hunt and poaching	Protection of the animals from the exploit and disease	1
2	Protection of animal from exploitation	Protection against the exploit of animals for dark purposes	1
\.


--
-- Data for Name: Service_Category; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Service_Category" ("ID_category", category_name) FROM stdin;
1	Animal Protection
2	Forest Protection
3	Pollution
\.


--
-- Data for Name: Service_Images; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Service_Images" ("ID_service", "URI_image") FROM stdin;
1	image_service_1
2	image_service_2
\.


--
-- Data for Name: donation; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.donation ("ID_Transaction", association_name, donor_name, earning, date) FROM stdin;
\.


--
-- Data for Name: people_involved_in_services; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.people_involved_in_services ("ID_Service_inv", "ID_Person_inv") FROM stdin;
1	4
2	4
\.


--
-- Name: Event_Category_ID_category_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Event_Category_ID_category_seq"', 1, false);


--
-- Name: Person_ID_person_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Person_ID_person_seq"', 1, false);


--
-- Name: donation_ID_Transaction_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."donation_ID_Transaction_seq"', 1, false);


--
-- Name: Association_Image Association_Image_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Association_Image"
    ADD CONSTRAINT "Association_Image_pkey" PRIMARY KEY (association_name, "URI_image");


--
-- Name: Service_Images Association_Images_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Service_Images"
    ADD CONSTRAINT "Association_Images_pkey" PRIMARY KEY ("ID_service", "URI_image");


--
-- Name: Association Association_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Association"
    ADD CONSTRAINT "Association_pkey" PRIMARY KEY (association_name);


--
-- Name: Event_Category Event_Category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Event_Category"
    ADD CONSTRAINT "Event_Category_pkey" PRIMARY KEY ("ID_category");


--
-- Name: Event Event_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Event"
    ADD CONSTRAINT "Event_pkey" PRIMARY KEY ("ID_event");


--
-- Name: Image Image_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Image"
    ADD CONSTRAINT "Image_pkey" PRIMARY KEY ("URI");


--
-- Name: Person Person_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Person"
    ADD CONSTRAINT "Person_pkey" PRIMARY KEY ("ID_person");


--
-- Name: Role Role_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Role"
    ADD CONSTRAINT "Role_pkey" PRIMARY KEY ("ID_role");


--
-- Name: Service_Category Service_Category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Service_Category"
    ADD CONSTRAINT "Service_Category_pkey" PRIMARY KEY ("ID_category");


--
-- Name: Service Service_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Service"
    ADD CONSTRAINT "Service_pkey" PRIMARY KEY ("ID_service");


--
-- Name: donation donation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.donation
    ADD CONSTRAINT donation_pkey PRIMARY KEY ("ID_Transaction");


--
-- Name: people_involved_in_services people_involved_in_services_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.people_involved_in_services
    ADD CONSTRAINT people_involved_in_services_pkey PRIMARY KEY ("ID_Person_inv", "ID_Service_inv");


--
-- Name: fki_uri_image; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_uri_image ON public."Person" USING btree ("URI_image");


--
-- Name: Association_Image Association Name; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Association_Image"
    ADD CONSTRAINT "Association Name" FOREIGN KEY (association_name) REFERENCES public."Association"(association_name) NOT VALID;


--
-- Name: donation Association Name; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.donation
    ADD CONSTRAINT "Association Name" FOREIGN KEY (association_name) REFERENCES public."Association"(association_name);


--
-- Name: people_involved_in_services ID person; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.people_involved_in_services
    ADD CONSTRAINT "ID person" FOREIGN KEY ("ID_Person_inv") REFERENCES public."Person"("ID_person") NOT VALID;


--
-- Name: people_involved_in_services ID service; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.people_involved_in_services
    ADD CONSTRAINT "ID service" FOREIGN KEY ("ID_Service_inv") REFERENCES public."Service"("ID_service") NOT VALID;


--
-- Name: Association_Image URI image; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Association_Image"
    ADD CONSTRAINT "URI image" FOREIGN KEY ("URI_image") REFERENCES public."Image"("URI") NOT VALID;


--
-- Name: Event event_category; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Event"
    ADD CONSTRAINT event_category FOREIGN KEY (event_category) REFERENCES public."Event_Category"("ID_category") NOT VALID;


--
-- Name: Event id_contact_person; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Event"
    ADD CONSTRAINT id_contact_person FOREIGN KEY ("ID_contact_person") REFERENCES public."Person"("ID_person") NOT VALID;


--
-- Name: Person id_role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Person"
    ADD CONSTRAINT id_role FOREIGN KEY ("ID_role") REFERENCES public."Role"("ID_role") NOT VALID;


--
-- Name: Event id_service; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Event"
    ADD CONSTRAINT id_service FOREIGN KEY ("event_ID_service") REFERENCES public."Service"("ID_service") NOT VALID;


--
-- Name: Service_Images id_service; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Service_Images"
    ADD CONSTRAINT id_service FOREIGN KEY ("ID_service") REFERENCES public."Service"("ID_service") NOT VALID;


--
-- Name: Service service_category; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Service"
    ADD CONSTRAINT service_category FOREIGN KEY (service_category) REFERENCES public."Service_Category"("ID_category") NOT VALID;


--
-- Name: Service_Images uri_image; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Service_Images"
    ADD CONSTRAINT uri_image FOREIGN KEY ("URI_image") REFERENCES public."Image"("URI") NOT VALID;


--
-- Name: Event uri_image; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Event"
    ADD CONSTRAINT uri_image FOREIGN KEY ("event_URI_image") REFERENCES public."Image"("URI") NOT VALID;


--
-- Name: Person uri_image; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Person"
    ADD CONSTRAINT uri_image FOREIGN KEY ("URI_image") REFERENCES public."Image"("URI") NOT VALID;


--
-- PostgreSQL database dump complete
--

